# -*- coding: utf-8 -*-
"""Shape.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AHcaIXc2R_PYyl71lQ1vueEpPdwhrFoc
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install geopandas matplotlib
#

import geopandas as gpd

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

shapefile.head()

Municipios = shapefile['NM_MUN'].tolist()
Municipios

shapefile.plot()

"""#União dos Shapes

## DRE Abaetetuba
"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Abaetetuba', 'Acará', 'Barcarena', 'Igarapé-Miri', 'Moju', 'Tailândia']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Abaetetuba'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Afua"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Afuá', 'Chaves']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Afua'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Altamira"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Altamira', 'Anapu', 'Brasil Novo', 'Medicilândia', 'Porto de Moz', 'Senador José Porfírio', 'Uruará', 'Vitória do Xingu']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Altamira'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Benevides"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Benevides', 'Marituba']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Benevides'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Breves"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Anajás', 'Bagre', 'Breves', 'Gurupá', 'Melgaço', 'Portel']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Breves'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Cachoeira do Arari"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Cachoeira do Arari', 'Salvaterra', 'Santa Cruz do Arari', 'Soure']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Cachoeira do Arari'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Cametá"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Baião', 'Cametá', 'Mocajuba']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Cameta'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Capanema"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Bonito', 'Capanema', 'Nova Timboteua', 'Ourém', 'Peixe-Boi', 'Primavera', 'Quatipuru', 'Salinópolis', 'Santa Luzia do Pará', 'Santarém Novo', 'São João de Pirabas']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Capanema'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Castanhal"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Castanhal', 'Curuçá', 'Inhangapi', 'Santa Maria do Pará', 'São Domingos do Capim', 'São Francisco do Pará', 'São João da Ponta', 'São Miguel do Guamá', 'Terra Alta']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Castanhal'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Bragança"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Augusto Corrêa', 'Bragança', 'Cachoeira do Piriá', 'Tracuateua', 'Viseu']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Bragança'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Curralinho"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Limoeiro do Ajuru', 'Oeiras do Pará', 'Curralinho', 'Muaná', 'Ponta de Pedras', 'São Sebastião da Boa Vista']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Curralinho'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Maraba"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Abel Figueiredo', 'Bom Jesus do Tocantins', 'Brejo Grande do Araguaia', 'Brejo Grande do Araguaia', 'Itupiranga', 'Jacundá', 'Marabá', 'Nova Ipixuna', 'Palestina do Pará', 'Piçarra', 'Rondon do Pará', 'São Domingos do Araguaia', 'São Geraldo do Araguaia', 'São João do Araguaia']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Maraba'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Santarem"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Aveiro', 'Belterra', 'Mojuí dos Campos', 'Santarém', 'Santarém Novo']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Santarem'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Monte Alegre"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Alenquer', 'Almeirim', 'Monte Alegre', 'Prainha']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Monte Alegre'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Obidos"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Curuá', 'Faro', 'Juruti', 'Óbidos', 'Oriximiná', 'Terra Santa']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Obidos'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Maracana"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Igarapé-Açu', 'Magalhães Barata', 'Maracanã']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Maracana'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Santa Izabel do Pará"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir = ['Bujaru', 'Colares', 'Concórdia do Pará', 'Santa Izabel do Pará', 'Santo Antônio do Tauá', 'São Caetano de Odivelas', 'Tomé-Açu', 'Vigia']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Santa izabel do pará'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Itaituba"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Itaituba', 'Jacareacanga', 'Novo Progresso', 'Placas', 'Rurópolis', 'Trairão']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Itaituba'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Conceição do Araguaia"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Conceição do Araguaia', 'Cumaru do Norte', 'Floresta do Araguaia', "Pau D'Arco", 'Redenção', 'Santa Maria das Barreiras', 'Santana do Araguaia']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Conceicao do araguaia'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Tucurui"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Breu Branco', 'Goianésia do Pará', 'Novo Repartimento', 'Pacajá', 'Tucuruí']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Tucurui'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Capitão Poço"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Capitão Poço', 'Garrafão do Norte', 'Nova Esperança do Piriá']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Capitao Poço'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Mae do Rio"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Mãe do Rio', 'Aurora do Pará', 'Dom Eliseu', 'Ipixuna do Pará', 'Irituia', 'Paragominas', 'Ulianópolis']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Mae do rio'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Santa Barbara"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Santa Bárbara do Pará']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Santa Barbara'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Parauapebas"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Canaã dos Carajás', 'Curionópolis', 'Eldorado do Carajás', 'Parauapebas']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Parauapebas'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Xinguara"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Água Azul do Norte', 'Bannach', 'Ourilândia do Norte', 'Rio Maria', 'São Félix do Xingu', 'Sapucaia', 'Tucumã', 'Xinguara']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Xinguara'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Belem"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Belém']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Belem'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)

"""## DRE Ananindeua"""

import geopandas as gpd
from shapely.ops import unary_union
import matplotlib.pyplot as plt

# Substitua 'seu_arquivo.shp' pelo caminho do seu arquivo de shape
shapefile = gpd.read_file('/content/PA_Municipios_2022.shp')

# Lista de municípios que você deseja unir (substitua com os nomes dos municípios desejados)
municipios_a_unir =['Ananindeua']

# Seleciona os municípios a serem unidos
municipios_selecionados = shapefile[shapefile['NM_MUN'].isin(municipios_a_unir)]

# Verifica se há geometrias a serem unidas
if not municipios_selecionados.empty:
    # Realiza a união dos shapes dos municípios selecionados
    uniao_shapes = unary_union(municipios_selecionados['geometry'])

    # Verifica se a geometria resultante não é vazia
    if uniao_shapes.is_empty:
        print("A união resultou em uma geometria vazia. Verifique a seleção dos municípios.")
    else:
        # Cria um novo GeoDataFrame com o shape resultante da união
        novo_shapefile = gpd.GeoDataFrame(geometry=[uniao_shapes])

        # Plota o novo shape
        novo_shapefile.plot()
        plt.show()
else:
    print("Nenhum município selecionado para união.")

# Adiciona uma coluna 'DRE' com os valores desejados para cada linha
novo_shapefile['DRE'] = 'Ananindeua'

# Concatena os valores da lista 'municipios_a_unir' em uma única string separada por vírgulas
municipios_string = ', '.join(municipios_a_unir)

# Adiciona uma coluna 'Municipios' com os valores da string concatenada para todas as linhas
novo_shapefile['Municipios'] = municipios_string

# Exporta o novo shape unido para um arquivo shapefile
nome_arquivo = f"/content/DRE_{novo_shapefile['DRE'].iloc[0]}.shp"
novo_shapefile.to_file(nome_arquivo)